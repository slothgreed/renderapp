<#@ template language="C#" debug="true" hostspecific="true" #>
<#@ output extension="cs"#>
using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Input;

<# 
	string[] _property =
	{
		"LeftUpDockPanel",
		"LeftDownDockPanel",
		"RightUpDockPanel",
		"RightDownDockPanel",
		"CenterDockPanel"
	};
#>
<#
	string[] _command =
	{
		"NewProject",
		"OpenProject",
		"SaveProject",
		"SaveAsProject",
		"LoadAsset",
		"CreateObject",
		"Controller",
		"WindowClose",
		"SizeChanged",
		"TogglePostProcess",
		"Voxelize",
		"Octree",
		"OpenExplorer",
		"OpenDebugWindow",
		"Undo",
		"Redo"
	};

#>
namespace RenderApp.ViewModel
{
	public partial class MainWindowViewModel
	{
<#
		for(int i =0 ; i < _command.Length; i++)
		{
#>
			private ICommand _<#=_command[i]#>;
			public ICommand <#=_command[i]#>
			{
				get
				{
					if (_<#=_command[i]#> == null)
					{
						return _<#=_command[i]#> = CreateCommand(<#=_command[i]#>Command);						
					}

					return _<#=_command[i]#>;
				}
			}
<#
		}

#>

<#
		for(int i =0 ; i < _property.Length; i++)
		{
#>
			private TabControlViewModel _<#=_property[i]#>;
			public TabControlViewModel <#=_property[i]#>
			{
				get
				{
					return _<#=_property[i]#>;
				}

				set
				{
					SetValue(ref _<#=_property[i]#>, value);
				}
			}
<#
		}

#>

	}

}